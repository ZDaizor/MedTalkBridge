<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.bizcase.mapper.ScoreRangeStatisticsMapper">

    <resultMap type="com.ruoyi.bizcase.domain.ScoreRangeStatistics" id="ScoreRangeStatisticsResult">
        <result property="scoreRange"         column="score_range" />
        <result property="studentCount"       column="student_count" />
    </resultMap>

    <!-- 查询分数范围统计 -->
    <select id="selectScoreRangeStatistics" resultMap="ScoreRangeStatisticsResult">
        <![CDATA[
        WITH score_ranges AS (
            SELECT '90-100分' AS range_name, 90 AS min_score, 100 AS max_score
            UNION ALL SELECT '80-89分', 80, 89
            UNION ALL SELECT '70-79分', 70, 79
            UNION ALL SELECT '60-69分', 60, 69
            UNION ALL SELECT '60分以下', 0, 59
        ),
        score_counts AS (
            SELECT 
                CASE 
                    WHEN e.totle_score >= 90 THEN '90-100分'
                    WHEN e.totle_score >= 80 AND e.totle_score < 90 THEN '80-89分'
                    WHEN e.totle_score >= 70 AND e.totle_score < 80 THEN '70-79分'
                    WHEN e.totle_score >= 60 AND e.totle_score < 70 THEN '60-69分'
                    WHEN e.totle_score < 60 THEN '60分以下'
                END AS score_range,
                COUNT(*) AS student_count
            FROM 
                biz_case_evaluations e
            WHERE 
                e.totle_score > 0 -- 只统计有效分数
            GROUP BY 
                CASE 
                    WHEN e.totle_score >= 90 THEN '90-100分'
                    WHEN e.totle_score >= 80 AND e.totle_score < 90 THEN '80-89分'
                    WHEN e.totle_score >= 70 AND e.totle_score < 80 THEN '70-79分'
                    WHEN e.totle_score >= 60 AND e.totle_score < 70 THEN '60-69分'
                    WHEN e.totle_score < 60 THEN '60分以下'
                END
        )
        SELECT 
            r.range_name AS score_range,
            COALESCE(c.student_count, 0) AS student_count
        FROM 
            score_ranges r
        LEFT JOIN 
            score_counts c ON r.range_name = c.score_range
        ORDER BY 
            r.min_score DESC
        ]]>
    </select>

</mapper>